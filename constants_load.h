/**
 * @file constants_load.h
 * @brief Заголовочный файл с константами для загрузки настроек.
 *
 * Этот файл содержит статические строковые константы, которые используются
 * как ключи для получения конфигурационных данных из внешних источников,
 * таких как файлы настроек или база данных.
 */

#ifndef CONSTANTS_LOAD_H
#define CONSTANTS_LOAD_H

#include "alias.h"

/**
 * @struct LOAD_CONSTANTS
 * @brief Класс-контейнер для статических констант, связанных с загрузкой конфигурации.
 *
 * Этот класс предоставляет набор ключей для доступа к различным параметрам
 * конфигурации приложения, таким как настройки базы данных, параметры сервера
 * и лимиты.
 */
struct LOAD_CONSTANTS
{
    //-------------------------------------------------------------------------
    // Константы, связанные с чат-комнатами (C)
    //-------------------------------------------------------------------------
    static chart DEFAULT_CHATROOMS;   /**< Ключ для получения списка чат-комнат по умолчанию. */

    //-------------------------------------------------------------------------
    // Константы, связанные с базой данных (D)
    //-------------------------------------------------------------------------
    static chart DB_HOST;             /**< Ключ для получения адреса хоста базы данных. */
    static chart DB_PASSWORD;         /**< Ключ для получения пароля пользователя базы данных. */
    static chart DB_PORT;             /**< Ключ для получения порта базы данных. */
    static chart DB_TABLE_NAME;       /**< Ключ для получения имени таблицы базы данных. */
    static chart DB_USER;             /**< Ключ для получения имени пользователя базы данных. */

    //-------------------------------------------------------------------------
    // Константы, связанные с лимитами (M)
    //-------------------------------------------------------------------------
    static chart MAX_CONNECTIONS;     /**< Ключ для получения максимального количества подключений. */
    static chart MAX_MESSAGE_LEN;     /**< Ключ для получения максимальной длины сообщения. */

    //-------------------------------------------------------------------------
    // Константы, связанные с сервером (S)
    //-------------------------------------------------------------------------
    static chart SERVER_IP;           /**< Ключ для получения IP-адреса сервера. */
    static chart SERVER_PORT;         /**< Ключ для получения порта сервера. */

private:
    LOAD_CONSTANTS() {} /**< @private Закрытый конструктор для предотвращения создания экземпляров. */
};

#endif // CONSTANTS_LOAD_H
